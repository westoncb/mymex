- Show full trees for each data source when there is no search text
- "New Items" button/count indicator/dialog
	List of new mems for each data source (e.g. if a new item was added to their bookmark's file)
	Quick UI for adding notes/tags to items from here
	Button to "mark all as seen"

- Clean up and document code
	-document DataStore/DataSourceWorkPump/DataSourceConnector etc.
	-fix warnings

- Finish LocalDirectoryDSC
	- Be able to actually display local files
		- First, if it's local, you need to prepend "file://" to the url in ContentViewer
		- Second, this isn't going to work unless you set 'webSecurity' to false...
	- Think about sync workflow: maybe just do it every 10 seconds
		- Show pop-up when new items are discovered during sync
		- Make it optional to actually delete items removed from data source (e.g. if I delete a bookmark in Chrome, I should be able to keep it in this app [perhaps it should become associated with faux/native/default "data source" at that point])
- Get "download fresh version" to work
- Begin TypeScript re-write

Ensure database contents will be safely preserved:
	- Allow specifying a custom location (so it could e.g. be backed up by Dropbox)
	- Think about handling migrations


Later:

- Look into testing with Jest

- Look into Storybook

- Handle iframe page not loading errors

- Need to either do some kind of filesystem watch for changes, or periodic re-scans or data sources to keep synced.

- Highlight matched elements in search results, e.g. highlight the tags or title substrings that matched the search text.


- Search results pagination

For watching file system changes use https://nodejs.org/api/fs.html#fs_fs_watch_filename_options_listener

For initial recursive traversal use: https://www.npmjs.com/package/walkdir


Ideas:
	- custom scrollbar component, showing a visual overview of results grouped into categories